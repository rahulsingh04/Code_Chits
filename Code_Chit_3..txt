1) Melting of the pandas dataframe:->
	Flag=data.melt(id_vars=['ClaimId','Type','pageNo','imageType','Image_Risk'],value_vars=data.loc[7:])
	### github command
	â€¦or push an existing repository from the command line
git remote add origin git@github.com:rahulsingh04/Code_Chits.git
git branch -M main
git push -u origin main
######### Remove Duplicate from the list
[j for i,j in enumerate(original_list) if j not in original_list[:i]]

### convert this [(1, 1), (2, 3), (4, 4)]   :----------------> [1, 1, 2, 3, 4, 4]
[x for tup in x3 for x in tup]

# Remove all non-word characters and underscores from the string
my_string = re.sub(r"[\W_]+", "", my_string)

##### If the list contains duplicates return True else return  False
  class Solution:
    def containsDuplicate(self, nums: [int]) -> bool:
        seen = set()
        for nums in nums:
            print(nums, end= " ")
            if nums in seen:
                print("You are in if statement:--->",nums)
                return True
            else:
                print("else statement")
                seen.add(nums)
        return False

#################
		nums =[nums1.pop(nums1.index(i)) for i  in nums2 if i in nums1]

################

def extract_year_semester(string):
    pattern = r"(year|semester)\s*(\d)"
    match = re.search(pattern, string, re.IGNORECASE)
    return match.groups() if match else np.NaN
    
    df['year'] = df['PID'].apply(lambda x: extract_year_semester(x))

